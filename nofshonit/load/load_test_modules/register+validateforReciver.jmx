<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="link checker" enabled="true">
        <stringProp name="scriptLanguage">groovy</stringProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="cacheKey">true</stringProp>
        <stringProp name="script">import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.Files;
import java.io.FileWriter;
import java.util.Arrays;
import java.io.Writer;
import java.util.List;
import java.nio.charset.StandardCharsets;
import java.io.*; 
class LineChanger{
	String pathToFile;
	String CSVFile;
	
	LineChanger(String pathToFile, String CSVFile){
		this.pathToFile = pathToFile;
		this.CSVFile = CSVFile;
	}
	public void changeLine(int lineNumber, String data) throws IOException {
    Path path = Paths.get(pathToFile,CSVFile);
    List&lt;String&gt; lines = Files.readAllLines(path, StandardCharsets.UTF_8);
    lines.set(lineNumber - 1, data);
    Files.write(path, lines, StandardCharsets.UTF_8);
		}
	}

LineChanger LineChangerId = new LineChanger(&quot;C:/GitHub/nofshonitjmeterci/nofshonit/CSV Files&quot;, &quot;to-id.csv&quot;);
LineChanger LineChangerEmail = new LineChanger(&quot;${pathToCSV}&quot;,&quot;${destination}&quot;);;
vars.putObject(&apos;LineChangerId&apos;,LineChangerId);
props.put(&apos;LineChangerEmail&apos;,LineChangerEmail);

vars.putObject(&apos;LineChangerEmail&apos;,LineChangerEmail);
props.put(&apos;LineChangerId&apos;,LineChangerId);


</stringProp>
      </JSR223PreProcessor>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Email" enabled="false">
        <stringProp name="filename">C:/GitHub/nofshonitjmeterci/nofshonit/CSV Files/toEmail.csv </stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames"></stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="register load test" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="jp@gc - Parameterized Controller" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Email" elementType="Argument">
                  <stringProp name="Argument.name">Email</stringProp>
                  <stringProp name="Argument.value">${__V(${toEmail})}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </kg.apc.jmeter.control.ParameterizedController>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Email" enabled="false">
            <stringProp name="filename">C:/GitHub/nofshonitjmeterci/nofshonit/CSV Files/toEmail.csv </stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="register slave" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>100.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Controller" enabled="true">
              <stringProp name="IncludeController.includepath">C:\GitHub\nofshonitjmeterci\nofshonit\Autentication\modules\Simple Controller registerForReciver.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Controller" enabled="true">
              <stringProp name="IncludeController.includepath">C:\GitHub\nofshonitjmeterci\nofshonit\Autentication\modules\Simple Controller validateForReciver.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="create new  Email unregistered" enabled="true">
              <stringProp name="variableName">newEmail</stringProp>
              <stringProp name="outputFormat">tal_00000000@dts-4u</stringProp>
              <stringProp name="minimumValue">1</stringProp>
              <stringProp name="maximumValue">99999999</stringProp>
              <stringProp name="randomSeed"></stringProp>
              <boolProp name="perThread">false</boolProp>
            </RandomVariableConfig>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="replace old ToEmail in csv files" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">
def LineChangerEmail = vars.getObject(&apos;LineChangerEmail&apos;);
String newEmail = vars.get(&apos;newEmail&apos;);
newEmail = newEmail.endsWith(&quot;.com&quot;)? newEmail: newEmail + &apos;.com&apos;;
log.info(newEmail);
LineChangerEmail.changeLine(2,newEmail);
vars.put(&apos;toEmail&apos;, newEmail);

</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="replace old id in csv files" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">
def checker = props.get(&apos;JsonChecker&apos;);
def LineChangerId = props.get(&apos;LineChangerId&apos;);
LineChangerId.changeLine(2,vars.get(&apos;id&apos;));

</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
